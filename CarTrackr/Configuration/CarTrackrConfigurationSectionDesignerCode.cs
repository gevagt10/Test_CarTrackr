//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarTrackr.Configuration
{
	/// <summary>
	/// The CarTrackrConfigurationSection Configuration Section.
	/// </summary>
	public partial class CarTrackrConfigurationSection : global::System.Configuration.ConfigurationSection
	{
		#region serviceStations Property
		
		/// <summary>
		/// The XML name of the <see cref="serviceStations"/> property.
		/// </summary>
		internal const global::System.String serviceStationsPropertyName = "serviceStations";
		
		/// <summary>
		/// Gets or sets the serviceStations.
		/// </summary>
		[global::System.Configuration.ConfigurationProperty(serviceStationsPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
		public global::CarTrackr.Configuration.ServiceStationCollection serviceStations
		{
			get
			{
				return (global::CarTrackr.Configuration.ServiceStationCollection)base[serviceStationsPropertyName];
			}
			set
			{
				base[serviceStationsPropertyName] = value;
			}
		}
		
		#endregion

		#region Singleton Instance

		/// <summary>
		/// The XML name of the CarTrackrConfigurationSection Configuration Section.
		/// </summary>
		internal const global::System.String CarTrackrConfigurationSectionSectionName = "carTrackrConfigurationSection";

		/// <summary>
		/// Gets the CarTrackrConfigurationSection instance.
		/// </summary>
		public static global::CarTrackr.Configuration.CarTrackrConfigurationSection Instance
		{
			get
			{
				return global::System.Configuration.ConfigurationManager.GetSection(CarTrackrConfigurationSectionSectionName) as global::CarTrackr.Configuration.CarTrackrConfigurationSection;
			}
		}

		#endregion

		#region Xmlns Property
		
		/// <summary>
		/// The XML name of the <see cref="Xmlns"/> property.
		/// </summary>
		internal const global::System.String XmlnsPropertyName = "xmlns";
		
		/// <summary>
		/// Gets the XML namespace of this Configuration Section.
		/// </summary>
		/// <remarks>
		/// This property makes sure that if the configuration file contains the XML namespace,
		/// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
		/// </remarks>
		[global::System.Configuration.ConfigurationProperty(XmlnsPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
		public global::System.String Xmlns
		{
			get
			{
				return (global::System.String)base[XmlnsPropertyName];
			}
		}
		
		#endregion
	}
}

namespace CarTrackr.Configuration
{
	/// <summary>
	/// The ServiceStation Configuration Element.
	/// </summary>
	public partial class ServiceStation : global::System.Configuration.ConfigurationElement
	{
		#region name Property
		
		/// <summary>
		/// The XML name of the <see cref="name"/> property.
		/// </summary>
		internal const global::System.String namePropertyName = "name";
		
		/// <summary>
		/// Gets or sets the name.
		/// </summary>
		[global::System.Configuration.ConfigurationProperty(namePropertyName, IsRequired = true, IsKey = true, IsDefaultCollection = false)]
		public global::System.String name
		{
			get
			{
				return (global::System.String)base[namePropertyName];
			}
			set
			{
				base[namePropertyName] = value;
			}
		}
		
		#endregion

		#region logoUrl Property
		
		/// <summary>
		/// The XML name of the <see cref="logoUrl"/> property.
		/// </summary>
		internal const global::System.String logoUrlPropertyName = "logoUrl";
		
		/// <summary>
		/// Gets or sets the logoUrl.
		/// </summary>
		[global::System.Configuration.ConfigurationProperty(logoUrlPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false, DefaultValue = "/Content/ServiceStations/none.gif")]
		public global::System.String logoUrl
		{
			get
			{
				return (global::System.String)base[logoUrlPropertyName];
			}
			set
			{
				base[logoUrlPropertyName] = value;
			}
		}
		
		#endregion

	}
}

namespace CarTrackr.Configuration
{
	/// <summary>
	/// A collection of ServiceStation instances.
	/// </summary>
	[global::System.Configuration.ConfigurationCollection(typeof(global::CarTrackr.Configuration.ServiceStation), CollectionType = global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap)]
	public partial class ServiceStationCollection : global::System.Configuration.ConfigurationElementCollection
	{
		#region Constants
		
		/// <summary>
		/// The XML name of the individual <see cref="global::CarTrackr.Configuration.ServiceStation"/> instances in this collection.
		/// </summary>
		internal const global::System.String ServiceStationPropertyName = "serviceStation";

		#endregion

		#region Overrides

		/// <summary>
		/// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
		/// </summary>
		/// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
		public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
		{
			get
			{
				return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
			}
		}

		/// <summary>
		/// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
		/// </summary>
		/// <param name="elementName">The name of the element to verify.</param>
		/// <returns>
		/// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>. The default is <see langword="false"/>.
		/// </returns>
		protected override global::System.Boolean IsElementName(global::System.String elementName)
		{
			return (elementName == ServiceStationPropertyName);
		}

		/// <summary>
		/// Gets the element key for a specified configuration element when overridden in a derived class.
		/// </summary>
		/// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
		/// <returns>
		/// An <see cref="global::System.Object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
		/// </returns>
		protected override global::System.Object GetElementKey(global::System.Configuration.ConfigurationElement element)
		{
			return ((global::CarTrackr.Configuration.ServiceStation)element).name;
		}

		/// <summary>
		/// When overridden in a derived class, creates a new <see cref="global::System.Configuration.ConfigurationElement"/>.
		/// </summary>
		/// <returns>
		/// A new <see cref="global::System.Configuration.ConfigurationElement"/>.
		/// </returns>
		protected override global::System.Configuration.ConfigurationElement CreateNewElement()
		{
			return new global::CarTrackr.Configuration.ServiceStation();
		}

		#endregion
		
		#region Indexer

		/// <summary>
		/// Gets the <see cref="global::CarTrackr.Configuration.ServiceStation"/> at the specified index.
		/// </summary>
		/// <param name="index">The index of the <see cref="global::CarTrackr.Configuration.ServiceStation"/> to retrieve</param>
		public global::CarTrackr.Configuration.ServiceStation this[int index]
		{
			get
			{
				return (global::CarTrackr.Configuration.ServiceStation)this.BaseGet(index);
			}
		}

		#endregion
		
		#region Add

		/// <summary>
		/// Adds the specified <see cref="global::CarTrackr.Configuration.ServiceStation"/>.
		/// </summary>
		/// <param name="serviceStation">The <see cref="global::CarTrackr.Configuration.ServiceStation"/> to add.</param>
		public void Add(global::CarTrackr.Configuration.ServiceStation serviceStation)
		{
			base.BaseAdd(serviceStation);
		}

		#endregion
		
		#region Remove

		/// <summary>
		/// Removes the specified <see cref="global::CarTrackr.Configuration.ServiceStation"/>.
		/// </summary>
		/// <param name="serviceStation">The <see cref="global::CarTrackr.Configuration.ServiceStation"/> to remove.</param>
		public void Remove(global::CarTrackr.Configuration.ServiceStation serviceStation)
		{
			base.BaseRemove(serviceStation);
		}

		#endregion
	}
}

